# -*- coding: utf-8 -*-
"""
Created on Sat Aug 19 22:53:22 2023

@author: Neil Garcia
"""

import pandas as pd

df = pd.read_csv(r"C:\Users\Neil Garcia\randomforest\malware detection dataset\uci_malware_detection.csv")

# convert text to binary
df.Label[df.Label == 'non-malicious'] = 0
df.Label[df.Label == 'malicious'] = 1


# define dependent variables
Y = df['Label'].values
Y = Y.astype('int')

# define independent variables
X = df.drop(labels=['Label'], axis=1)


# split the data
from sklearn.model_selection import train_test_split as tts
from sklearn.ensemble import RandomForestClassifier as RFC
X_train, X_test, Y_train, Y_test = tts(X,Y, test_size=0.2, random_state=20)


# check metrics with plots
from matplotlib import pyplot as plt
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
import seaborn as sns
import numpy as np

models = [RFC]
model = []
accuracy_test = []

for m in models:
    model_name = type(m()).__name__
    print('\n######-Model =>\033[07m {} \033[0m'.format(type(m()).__name__))
    model_ = m()
    model_.fit(X_train, Y_train)
    pred = model_.predict(X_test)
    acc = accuracy_score(pred, Y_test)
    accuracy_test.append(acc)
    model.append(model_name)
    print('Test Accuracy :\033[32m \033[01m {:.5f}% \033[30m \033[0m'.format(acc*100))
    print('\033[01m              Classification_report \033[0m')
    print(classification_report(Y_test, pred))
    print('\033[01m             Confusion_matrix \033[0m')
    cf_matrix = confusion_matrix(Y_test, pred)
    plot_ = sns.heatmap(cf_matrix/np.sum(cf_matrix), annot=True,fmt= '0.2%')
    plt.show()
    print('\033[31m###################- End -###################\033[0m')




# feature_list = list(X.columns)
# feature_imp = pd.Series(feature_list, index=feature_list).sort_values(ascending=False)
# print(feature_imp)

